<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
 -->

<!--
     NOTE: This features XML file uses the Karaf "install" attribute to specify whether a feature
     is automatically installed when an app's KAR file is hot deployed.

     Description of the install attribute from the Karaf features XSD:

     "Installation mode. Can be either manual or auto. Specifies whether the feature should be
     automatically installed when dropped inside the deploy folder. Note: This attribute doesn't
     affect feature descriptors that are installed from the command line or as part of the
     org.apache.karaf.features.cfg."
-->
<features xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          name="${project.artifactId}-${project.version}"
          xmlns="http://karaf.apache.org/xmlns/features/v1.3.0"
          xsi:schemaLocation="http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0">

    <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>

    <!--START from kernel features-->
    <repository>mvn:org.apache.karaf.features/standard/${karaf.version}/xml/features</repository>

    <feature name="kernel" install="manual" version="${project.version}">
        <feature prerequisite="true" version="${karaf.version}">standard</feature>
        <feature prerequisite="true" version="${karaf.version}">eventadmin</feature>
        <feature prerequisite="true" version="${karaf.version}">jasypt-encryption</feature>
        <feature prerequisite="true" version="${karaf.version}">http</feature>
    </feature>

    <feature name="branding-api" install="manual" version="${project.version}" description="Branding API">
        <bundle dependency="true">mvn:com.google.guava/guava/${guava.version}</bundle>
        <bundle>mvn:ddf.distribution/branding-api/${project.version}</bundle>
    </feature>

    <feature name="ddf-branding" install="manual" version="${project.version}" description="DDF Branding">
        <feature prerequisite="true">web-container</feature>
        <feature prerequisite="true">branding-api</feature>
        <bundle dependency="true">mvn:commons-io/commons-io/${commons-io.version}</bundle>
        <bundle dependency="true">mvn:commons-configuration/commons-configuration/${commons-configuration.version}</bundle>
        <bundle>mvn:ddf.distribution/ddf-branding-plugin/${project.version}</bundle>
    </feature>
    <!--END from kernel features-->

    <!-- CXF Stuff -->
    <repository>mvn:org.apache.cxf.karaf/apache-cxf/${cxf.version}/xml/features</repository>

    <feature name="platform-api" install="manual" version="${project.version}"
             description="Top Level Platform API">
        <bundle dependency="true">wrap:mvn:net.jodah/failsafe/${jodah-failsafe.version}</bundle>
        <bundle>mvn:ddf.platform.api/platform-api/${project.version}</bundle>
    </feature>

    <feature name ="platform-migratable-api" install="manual" version="${project.version}"
             description="Platform Migratable API">
        <bundle>mvn:ddf.platform.migration/platform-migratable-api/${project.version}</bundle>
    </feature>

    <feature name ="platform-migratable" install="manual" version="${project.version}"
             description="Exports Platform configurations and system files">
        <bundle>mvn:ddf.platform/platform-migratable/${project.version}</bundle>
    </feature>

    <feature name ="platform-migration" install="manual" version="${project.version}"
             description="Listens for new configuration files and updates configuration admin with the new configurations.">
        <bundle>mvn:ddf.platform.migration/platform-migration/${project.version}</bundle>
    </feature>

    <feature name="platform-scheduler" install="manual" version="${project.version}"
             description="Schedules tasks">
        <feature dependency="true">commons</feature>
        <feature dependency="true">security-core-api</feature>
        <bundle dependency="true">mvn:ddf.security.expansion/security-expansion-api/2.11.0-SNAPSHOT</bundle>
        <feature dependency="true">cxf</feature>
        <bundle dependency="true">mvn:ddf.security.handler/security-handler-api/2.11.0-SNAPSHOT</bundle>
        <bundle>mvn:ddf.platform/platform-scheduler/${project.version}</bundle>
    </feature>

    <feature name="security-logger" install="manual" version="${project.version}"
             description="Logs incoming and outgoing requests">
        <feature dependency="true">security-core-api</feature>
        <bundle>mvn:ddf.security.interceptor/security-interceptor-logger/${project.version}</bundle>
    </feature>

    <feature name="platform-commands" install="manual" version="${project.version}"
             description="Platform Command line tools">
        <feature dependency="true">platform-configuration</feature>
        <bundle>mvn:ddf.platform/platform-commands/${project.version}</bundle>
    </feature>

    <feature name="platform-configuration" install="manual" version="${project.version}"
             description="Shared platform configuration">
        <feature dependency="true">landing-page</feature>
        <bundle>mvn:ddf.platform/platform-configuration/${project.version}</bundle>
    </feature>

    <feature name="platform-country-local" install="manual" version="${project.version}"
             description="Service to convert country codes into various formats by performing a local lookup.">
        <bundle>mvn:ddf.platform.country/platform-country-converter-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform.country/platform-country-converter-local/${project.version}</bundle>
    </feature>

    <feature name="platform-usng4j" install="manual" version="${project.version}"
        description="Service to convert coordinates between various coordinate systems.">
        <bundle>mvn:ddf.platform.usng4j/platform-usng4j-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform.usng4j/platform-usng4j-impl/${project.version}</bundle>
    </feature>

    <feature name="action-core-api" install="manual" version="${project.version}"
             description="DDF Action API">
        <bundle>mvn:ddf.action.core/action-core-api/${project.version}</bundle>
    </feature>

    <feature name="action-core-impl" install="manual" version="${project.version}"
             description="DDF Action Core">
        <feature>action-core-api</feature>
        <bundle>mvn:ddf.action.core/action-core-impl/${project.version}</bundle>
    </feature>

    <feature name="notifications-core-api" install="manual" version="${project.version}"
             description="DDF Notifications API">
        <bundle>mvn:ddf.notifications.core/platform-notifications-core-api/${project.version}</bundle>
    </feature>

    <feature name="notifications-core" install="manual" version="${project.version}"
             description="DDF Notifications Core">
        <feature>notifications-core-api</feature>
        <feature>persistence-core-api</feature>
        <feature>platform-configuration</feature>
        <bundle>mvn:ddf.notifications.core/platform-core-notifications/${project.version}</bundle>
    </feature>

    <feature name="notifications-commands" install="manual" version="${project.version}"
             description="DDF Notifications Console Commands">
        <feature>notifications-core-api</feature>
        <feature>persistence-core-api</feature>
        <bundle>mvn:ddf.notifications.core/platform-core-notificationcommands/${project.version}</bundle>
    </feature>

    <feature name="mime-core-api" install="manual" version="${project.version}"
             description="DDF MIME API">
        <feature dependency="true">platform-dependencies</feature>
        <bundle>mvn:ddf.mime.core/mime-core-api/${project.version}</bundle>
    </feature>

    <feature name="mime-core" install="manual" version="${project.version}"
             description="DDF MIME Core">
        <feature>mime-core-api</feature>
        <bundle>mvn:ddf.mime.core/mime-core-impl/${project.version}</bundle>
        <bundle>mvn:ddf.mime.core/mime-core-configurableresolver/${project.version}</bundle>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.csw.config">mvn:ddf.platform/platform-app/${project.version}/config/csw</configfile>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.geojson.config">mvn:ddf.platform/platform-app/${project.version}/config/geojson</configfile>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.nitf.config">mvn:ddf.platform/platform-app/${project.version}/config/nitf</configfile>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.xml.config">mvn:ddf.platform/platform-app/${project.version}/config/xml</configfile>
    </feature>

    <feature name="mime-tika-resolver" install="manual" version="${project.version}"
             description="DDF Tika MIME Resolver.">
        <bundle>mvn:ddf.mime.tika/mime-tika-resolver/${project.version}</bundle>
    </feature>

    <feature name="security-core-api" install="manual" version="${project.version}"
             description="DDF Security Core">
        <feature dependency="true">cxf-rt-security</feature>
        <feature dependency="true">cxf-bindings-soap</feature>
        <feature dependency="true">cxf-ws-policy</feature>
        <feature dependency="true">cxf-ws-security</feature>
        <feature dependency="true" version="${spring.version}_1">spring</feature>
        <bundle dependency="true">mvn:org.apache.shiro/shiro-core/${apache.shiro.version}</bundle>
        <bundle>mvn:ddf.security.core/security-core-api/${project.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxen/${org.apache.servicemix.bundles.jaxen.version}</bundle>
    </feature>

    <feature name="security-encryption" install="manual" version="${project.version}"
             description="DDF Security Encryption">
        <feature>security-core-api</feature>
        <bundle>mvn:ddf.security.encryption/security-encryption-api/${project.version}</bundle>
        <bundle>mvn:ddf.security.encryption/security-encryption-impl/${project.version}</bundle>
        <bundle>mvn:ddf.security.encryption/security-encryption-commands/${project.version}</bundle>
    </feature>

    <feature name="metrics-reporting" install="manual" version="${project.version}"
             description="Metrics reporting for DDF.">
        <feature dependency="true">cxf</feature>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.poi/3.9_2</bundle>
        <bundle dependency="true">mvn:com.googlecode.json-simple/json-simple/1.1.1</bundle>
        <bundle>mvn:ddf.metrics.reporting/metrics-reporting/${project.version}</bundle>
    </feature>

    <feature name="metrics-services" install="manual" version="${project.version}"
             description="cxf interceptors to capture metrics.">
        <feature dependency="true">platform-configuration</feature>
        <bundle>mvn:ddf.metrics.interceptor/metrics-interceptor/${project.version}</bundle>
    </feature>

    <feature name="compression-exi" install="manual" version="${project.version}"
             description="Adds EXI compression support for CXF services.">
        <bundle>mvn:ddf.compression/compression-exi/${project.version}</bundle>
    </feature>

    <feature name="compression-gzip" install="manual" version="${project.version}"
             description="Adds GZip compression support for CXF services.">
        <bundle>mvn:ddf.compression/compression-gzip/${project.version}</bundle>
    </feature>

    <feature name="banana" install="auto" version="${project.version}"
             description="Adds banana">
        <feature prerequisite="true">platform-dependencies</feature>
        <feature prerequisite="true" version="${project.version}">solr</feature>
        <bundle>mvn:ddf.platform.solr/solr-banana/${project.version}/war</bundle>
        <bundle>mvn:ddf.platform.solr/solr-banana-provisioner/${project.version}</bundle>

        <configfile finalname="/data/solr/banana/conf/schema.xml">
            mvn:ddf.platform.solr/solr-banana/${project.version}/xml/bananaschema
        </configfile>
        <configfile finalname="/examples/banana/DefaultDashboard.json">
            mvn:ddf.platform.solr/solr-banana/${project.version}/json/bananadashboard
        </configfile>
    </feature>

    <feature name="solr" install="manual" version="${project.version}"
             description="DDF Standalone Solr Server">
        <bundle dependency="true">mvn:org.codice.thirdparty/jts/${jts.bundle.version}</bundle>
        <bundle dependency="true">mvn:org.codice.thirdparty/gt-opengis/${opengis.bundle.version}</bundle>
        <bundle dependency="true">mvn:org.codice.thirdparty/picocontainer/1.2_1</bundle>
        <bundle dependency="true">mvn:org.codice.thirdparty/vecmath/1.3.2_1</bundle>
        <!-- for GeoTools -->
        <bundle dependency="true">mvn:org.codice.thirdparty/geotools-suite/${org.geotools.bundle.version}</bundle>

        <bundle>mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/war</bundle>
        <configfile finalname="/solr/solr.xml">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/xml/solr
        </configfile>
        <configfile finalname="/solr/collection1/conf/solrconfig.xml">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/xml/solrconfig
        </configfile>
        <configfile finalname="/solr/collection1/conf/schema.xml">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/xml/schema
        </configfile>
        <configfile finalname="/solr/collection1/conf/protwords.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/protwords
        </configfile>
        <configfile finalname="/solr/collection1/conf/stopwords_en.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/stopwords_en
        </configfile>
        <configfile finalname="/solr/collection1/conf/stopwords.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/stopwords
        </configfile>
        <configfile finalname="/solr/collection1/conf/synonyms.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/synonyms
        </configfile>
    </feature>

    <feature name="persistence-core-api" install="manual" version="${project.version}"
             description="DDF Internal Persistence Core API">
        <bundle>mvn:ddf.persistence.core/persistence-core-api/${project.version}</bundle>
    </feature>

    <feature name="persistence-core" install="manual" version="${project.version}"
             description="DDF Internal Persistence Core Implementation">
        <feature dependency="true" version="${project.version}">solr</feature>
        <feature dependency="true">persistence-core-api</feature>
        <feature dependency="true">security-encryption</feature>
        <bundle>mvn:ddf.persistence.core/persistence-core-impl/${project.version}</bundle>
        <bundle>mvn:ddf.persistence.core/persistence-core-commands/${project.version}</bundle>
        <bundle dependency="true">mvn:org.codice.thirdparty/gt-opengis/${opengis.bundle.version}</bundle>
        <bundle>mvn:ddf.persistence.core/persistence-core-listeners/${project.version}</bundle>
        <bundle>mvn:ddf.persistence.core/persistence-core-attributes-impl/${project.version}</bundle>
    </feature>

    <feature name="error" install="manual" version="${project.version}"
             description="Platform error handler.">
        <bundle>mvn:ddf.platform.error/platform-error-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform.error/platform-error-impl/${project.version}</bundle>
    </feature>

    <feature name="parser-xml" install="manual" version="${project.version}"
             description="Platform JAXB support.">
        <bundle>mvn:ddf.platform/platform-parser-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform/platform-parser-xml/${project.version}</bundle>
    </feature>

    <feature name="platform-filter-delegate" install="manual" version="${project.version}">
        <feature prerequisite="true">commons</feature>
        <feature prerequisite="true">kernel</feature>
        <feature prerequisite="true" version="${spring.version}_1">spring</feature>
        <feature prerequisite="true">pax-http-jetty</feature>
        <feature prerequisite="true">pax-jetty</feature>
        <bundle dependency="true">mvn:com.google.guava/guava/${guava.version}</bundle>
        <bundle start-level="30">mvn:ddf.platform/platform-filter-delegate/${project.version}</bundle>
    </feature>

    <feature name="web-container" install="manual" version="${project.version}">
        <feature prerequisite="true">platform-filter-delegate</feature>
        <feature prerequisite="true">platform-paxweb-jettyconfig</feature>
        <feature>war</feature>
    </feature>

    <feature name="platform-app" install="manual" version="${project.version}"
             description="Installs the DDF platform boot features which all other applications depend upon.\nPlatform features installed by default include Apache CXF, Apache Camel, Action Framework, MIME Framework, Metrics, Security Core API and Security Encryption::Platform">
        <feature prerequisite="true">web-container</feature>
        <feature prerequisite="true">platform-dependencies</feature>
        <feature>platform-all</feature>
    </feature>

    <feature name="platform-dependencies" install="manual" version="${project.version}">
        <feature dependency="true">branding-api</feature>
        <feature dependency="true">wrap</feature>
        <feature dependency="true">camel-http</feature>
        <feature dependency="true">commons</feature>
        <bundle dependency="true">mvn:ch.qos.cal10n/cal10n-api/0.7.4</bundle>
        <bundle dependency="true">mvn:org.slf4j/slf4j-ext/${org.slf4j.version}</bundle>
        <bundle dependency="true">mvn:org.ops4j.base/ops4j-base-lang/${org.ops4j-base-lang}</bundle>
        <bundle dependency="true">mvn:org.ops4j.pax.swissbox/pax-swissbox-lifecycle/${org.ops4j.pax.swissbox.version}</bundle>
        <bundle dependency="true">mvn:org.ops4j.pax.swissbox/pax-swissbox-optional-jcl/${org.ops4j.pax.swissbox.version}</bundle>
        <bundle dependency="true">mvn:org.ops4j.pax.swissbox/pax-swissbox-extender/${org.ops4j.pax.swissbox.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.saxon/${saxon.bundle.plugin}</bundle>
        <bundle dependency="true">mvn:org.joda/joda-convert/${joda-convert.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.javax-inject/${javax.inject.bundle.version}</bundle>
        <bundle dependency="true">mvn:javax.validation/validation-api/${validation.version}</bundle>
        <bundle dependency="true">mvn:com.google.guava/guava/${guava.version}</bundle>
    </feature>

    <feature name="commons" install="manual" version="${project.version}">
        <bundle dependency="true">mvn:commons-io/commons-io/${commons-io.version}</bundle>
        <bundle dependency="true">mvn:commons-lang/commons-lang/${commons-lang.version}</bundle>
        <bundle dependency="true">mvn:org.apache.commons/commons-lang3/${commons-lang3.version}</bundle>
        <bundle dependency="true">mvn:commons-collections/commons-collections/${commons-collections.version}</bundle>
    </feature>

    <feature name="platform-filter-response" install="manual" version="${project.version}"
             description="Response Filter for outgoing HTTP messages.">
        <bundle>mvn:ddf.platform/platform-filter-response/${project.version}</bundle>
    </feature>

    <feature name="platform-all" install="manual" version="${project.version}">
        <feature prerequisite="true">platform-api</feature>
        <bundle>mvn:ddf.platform/platform-logging/${project.version}</bundle>
        <feature prerequisite="true">platform-migrate-all</feature>
        <feature>platform-scheduler</feature>
        <feature>platform-commands</feature>
        <feature>platform-configuration</feature>
        <feature>action-core-api</feature>
        <feature>action-core-impl</feature>
        <feature>notifications-core</feature>
        <feature>mime-core</feature>
        <feature>mime-tika-resolver</feature>
        <feature>security-encryption</feature>
        <feature>security-core-api</feature>
        <feature>metrics-reporting</feature>
        <feature>metrics-services</feature>
        <feature>security-logger</feature>
        <feature>solr</feature>
        <feature>persistence-core</feature>
        <feature>error</feature>
        <feature>parser-xml</feature>
        <feature>landing-page</feature>
        <feature>platform-filter-response</feature>
        <feature>platform-email</feature>
    </feature>

    <feature name="clientinfo-filter" install="auto" version="${project.version}"
             description="Servlet filter to extract client information from the request">
        <feature prerequisite="true">security-core-api</feature>
        <bundle>mvn:ddf.platform/platform-filter-clientinfo/${project.version}</bundle>
    </feature>

    <feature name="platform-paxweb-jettyconfig" install="manual" version="${project.version}"
             description="Custom Session Manager">
        <feature prerequisite="true" version="${spring.version}_1">spring</feature>
        <feature prerequisite="true">commons</feature>
        <feature prerequisite="true">pax-jetty</feature>
        <bundle dependency="true">wrap:mvn:net.jodah/failsafe/${jodah-failsafe.version}</bundle>
        <bundle>mvn:ddf.platform/platform-paxweb-jettyconfig/${project.version}</bundle>
    </feature>

    <feature name="platform-http-proxy" install="manual" version="${project.version}"
             description="HTTP to HTTPS proxy.">
        <feature prerequisite="true">camel-jetty9</feature>
        <bundle>mvn:ddf.platform/platform-http-proxy/${project.version}</bundle>
    </feature>

    <feature name="landing-page" install="manual" version="${project.version}"
             description="Landing page and branding support.">
        <feature dependency="true">platform-dependencies</feature>
        <feature dependency="true">ddf-branding</feature>
        <feature dependency="true">cxf</feature>
        <feature dependency="true">security-core-api</feature>
        <bundle>mvn:ddf.platform/landing-page/${project.version}</bundle>
    </feature>

    <feature name="platform-migrate-all" version="${project.version}">
        <feature dependency="true">platform-dependencies</feature>
        <feature>platform-migratable-api</feature>
        <feature>platform-migration</feature>
        <feature>platform-migratable</feature>
    </feature>

    <feature name='platform-email' install="manual" version='${project.version}' start-level='50'>
        <bundle dependency="true">mvn:commons-lang/commons-lang/${commons-lang.version}</bundle>
        <bundle dependency="true">mvn:com.sun.mail/javax.mail/1.5.5</bundle>
        <feature dependency="true">security-core-api</feature>
        <bundle>mvn:ddf.platform.email/platform-email-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform.email/platform-email-impl/${project.version}</bundle>
    </feature>

</features>
